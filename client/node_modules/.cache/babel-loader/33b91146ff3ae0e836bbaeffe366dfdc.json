{"ast":null,"code":"var _jsxFileName = \"/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/dashboardView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GradingDashboard(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grading Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/grading\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success m-2\",\n        children: \"Grading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light m-2\",\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check form-check-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: \"hideGradedCheckbox\",\n        defaultChecked: props.hideGraded,\n        onChange: props.onHideGraded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"hideGradedCheckbox\",\n        children: \"Hide Graded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnsweredTable, {\n      hideGraded: props.hideGraded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = GradingDashboard;\n\nconst AnsweredTable = ({\n  hideGraded\n}) => {\n  _s();\n\n  const [needsAnswered, setNeedsAnswered] = useState(true);\n  const [answered, setAnswered] = useState(null);\n  useEffect(() => {\n    if (!needsAnswered) return;\n    fetch(\"/api/getAllAnswered\").then(res => res.json()).then(data => {\n      setNeedsAnswered(false);\n      setAnswered(data);\n      console.log(\"got answered\");\n    });\n  });\n\n  if (needsAnswered && !answered) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"m-2\",\n      children: \"Getting answered...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!answered || answered.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"m-2\",\n      children: \"No questions!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  const rows = answered.flatMap((question, index) => {\n    if (question.graded && hideGraded) return [];\n    let score = \"-\";\n\n    if (question.score != null) {\n      score = question.score;\n    }\n\n    const questionId = question.id;\n    const {\n      trainee\n    } = question;\n    const link = \"/grading/\" + trainee + \"/\" + questionId;\n    return [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: trainee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.assessor || \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: question.questionType || \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: link,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary btn-sm\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, \"question-\" + questionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)];\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-hover align-middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"table-light\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Trainee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Assessor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Question Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnsweredTable, \"zRnZk7q/j+7wSmDA4CoXnjaSzxM=\");\n\n_c2 = AnsweredTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GradingDashboard\");\n$RefreshReg$(_c2, \"AnsweredTable\");","map":{"version":3,"sources":["/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/dashboardView.jsx"],"names":["React","useState","useEffect","Link","GradingDashboard","props","hideGraded","onHideGraded","AnsweredTable","needsAnswered","setNeedsAnswered","answered","setAnswered","fetch","then","res","json","data","console","log","length","rows","flatMap","question","index","graded","score","questionId","id","trainee","link","assessor","questionType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function GradingDashboard(props) {\n    return (\n        <React.Fragment>\n            <h1>Grading Dashboard</h1>\n            <Link to=\"/grading\">\n                <button type=\"button\" className=\"btn btn-success m-2\">\n                    Grading\n                </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-light m-2\">\n                Export\n            </button>\n            {/* todo: could turn this into a toggle button instead of a checkbox */}\n            <div className=\"form-check form-check-inline\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"hideGradedCheckbox\"\n                    defaultChecked={props.hideGraded}\n                    onChange={props.onHideGraded}\n                />\n                <label\n                    className=\"form-check-label\"\n                    htmlFor=\"hideGradedCheckbox\"\n                >\n                    Hide Graded\n                </label>\n            </div>\n            <AnsweredTable hideGraded={props.hideGraded} />\n        </React.Fragment>\n    );\n}\n\nconst AnsweredTable = ({ hideGraded }) => {\n    const [needsAnswered, setNeedsAnswered] = useState(true);\n    const [answered, setAnswered] = useState(null);\n\n    useEffect(() => {\n        if (!needsAnswered) return;\n        fetch(\"/api/getAllAnswered\")\n            .then((res) => res.json())\n            .then((data) => {\n                setNeedsAnswered(false);\n                setAnswered(data);\n                console.log(\"got answered\");\n            });\n    });\n\n    if (needsAnswered && !answered) {\n        return <p className=\"m-2\">Getting answered...</p>;\n    }\n\n    if (!answered || answered.length === 0) {\n        return <p className=\"m-2\">No questions!</p>;\n    }\n\n    const rows = answered.flatMap((question, index) => {\n        if (question.graded && hideGraded) return [];\n        let score = \"-\";\n        if (question.score != null) {\n            score = question.score;\n        }\n        const questionId = question.id;\n        const { trainee } = question;\n        const link = \"/grading/\" + trainee + \"/\" + questionId;\n        return [\n            <tr key={\"question-\" + questionId}>\n                <th>{index + 1}</th>\n                <td>{trainee}</td>\n                <td>{question.assessor || \"-\"}</td>\n                <td>{question.questionType || \"N/A\"}</td>\n                <td>{score}</td>\n                <td>\n                    <Link to={link}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary btn-sm\"\n                        >\n                            Question\n                        </button>\n                    </Link>\n                </td>\n            </tr>,\n        ];\n    });\n\n    return (\n        <table className=\"table table-hover align-middle\">\n            <thead className=\"table-light\">\n                <tr>\n                    <th></th>\n                    <th>Trainee</th>\n                    <th>Assessor</th>\n                    <th>Question Type</th>\n                    <th>Score</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n        </table>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}