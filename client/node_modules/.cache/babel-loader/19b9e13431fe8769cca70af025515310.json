{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nfunction dynamicResizing(element) {\n  if (element.scrollHeight === element.clientHeight) {\n    // extra space on the bottom, so reset height\n    element.style.height = \"1px\";\n  }\n\n  element.style.height = element.scrollHeight + \"px\";\n} // SFC to automatically resize all textareas\n\n\nexport const ResizeTextareas = () => {\n  _s();\n\n  useEffect(() => {\n    document.querySelectorAll(\".textarea\").forEach(e => dynamicResizing(e));\n  }); // component doesn't render anything\n\n  return null;\n};\n\n_s(ResizeTextareas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ResizeTextareas;\nexport function preventEnter(event) {\n  if (event.keyCode === 13) {\n    event.preventDefault();\n  }\n}\nexport function resetValid(element) {\n  element.classList.remove(\"is-invalid\");\n}\nexport function resetValidId(elementId) {\n  resetValid(document.getElementById(elementId));\n} // API functions\n\nexport function getAllQuestions(callback) {\n  fetch(\"/api/getAllQuestions\").then(res => res.json()).then(questions => {\n    console.log(\"got all questions\");\n    callback(questions);\n  });\n}\nexport function getQuestion(questionId, callback) {\n  fetch(`/api/getQuestion/${questionId}`).then(res => res.json()).then(question => {\n    console.log(\"got question:\", question);\n    callback(question);\n  });\n}\nexport function getAllAnswered(callback) {\n  fetch(\"/api/getAllAnswered\").then(res => res.json()).then(answered => {\n    console.log(\"got all answered\");\n    callback(answered);\n  });\n}\nexport function getAnswered(trainee, questionId, callback) {\n  fetch(`/api/getAnswered/${trainee}/${questionId}`).then(res => res.json()).then(question => {\n    console.log(`got question ${questionId} for trainee ${trainee}`);\n    callback(question);\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ResizeTextareas\");","map":{"version":3,"sources":["/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/shared.js"],"names":["useEffect","dynamicResizing","element","scrollHeight","clientHeight","style","height","ResizeTextareas","document","querySelectorAll","forEach","e","preventEnter","event","keyCode","preventDefault","resetValid","classList","remove","resetValidId","elementId","getElementById","getAllQuestions","callback","fetch","then","res","json","questions","console","log","getQuestion","questionId","question","getAllAnswered","answered","getAnswered","trainee"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC9B,MAAIA,OAAO,CAACC,YAAR,KAAyBD,OAAO,CAACE,YAArC,EAAmD;AAC/C;AACAF,IAAAA,OAAO,CAACG,KAAR,CAAcC,MAAd,GAAuB,KAAvB;AACH;;AACDJ,EAAAA,OAAO,CAACG,KAAR,CAAcC,MAAd,GAAuBJ,OAAO,CAACC,YAAR,GAAuB,IAA9C;AACH,C,CAED;;;AACA,OAAO,MAAMI,eAAe,GAAG,MAAM;AAAA;;AACjCP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CACHC,gBADL,CACsB,WADtB,EAEKC,OAFL,CAEcC,CAAD,IAAOV,eAAe,CAACU,CAAD,CAFnC;AAGH,GAJQ,CAAT,CADiC,CAMjC;;AACA,SAAO,IAAP;AACH,CARM;;GAAMJ,e;;KAAAA,e;AAUb,OAAO,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,MAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtBD,IAAAA,KAAK,CAACE,cAAN;AACH;AACJ;AAED,OAAO,SAASC,UAAT,CAAoBd,OAApB,EAA6B;AAChCA,EAAAA,OAAO,CAACe,SAAR,CAAkBC,MAAlB,CAAyB,YAAzB;AACH;AAED,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACpCJ,EAAAA,UAAU,CAACR,QAAQ,CAACa,cAAT,CAAwBD,SAAxB,CAAD,CAAV;AACH,C,CAED;;AAEA,OAAO,SAASE,eAAT,CAAyBC,QAAzB,EAAmC;AACtCC,EAAAA,KAAK,CAAC,sBAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,SAAD,IAAe;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,IAAAA,QAAQ,CAACK,SAAD,CAAR;AACH,GALL;AAMH;AAED,OAAO,SAASG,WAAT,CAAqBC,UAArB,EAAiCT,QAAjC,EAA2C;AAC9CC,EAAAA,KAAK,CAAE,oBAAmBQ,UAAW,EAAhC,CAAL,CACKP,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWQ,QAAD,IAAc;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAA7B;AACAV,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACH,GALL;AAMH;AAED,OAAO,SAASC,cAAT,CAAwBX,QAAxB,EAAkC;AACrCC,EAAAA,KAAK,CAAC,qBAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWU,QAAD,IAAc;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,IAAAA,QAAQ,CAACY,QAAD,CAAR;AACH,GALL;AAMH;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BL,UAA9B,EAA0CT,QAA1C,EAAoD;AACvDC,EAAAA,KAAK,CAAE,oBAAmBa,OAAQ,IAAGL,UAAW,EAA3C,CAAL,CACKP,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWQ,QAAD,IAAc;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeE,UAAW,gBAAeK,OAAQ,EAA9D;AACAd,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACH,GALL;AAMH","sourcesContent":["import { useEffect } from \"react\";\n\nfunction dynamicResizing(element) {\n    if (element.scrollHeight === element.clientHeight) {\n        // extra space on the bottom, so reset height\n        element.style.height = \"1px\";\n    }\n    element.style.height = element.scrollHeight + \"px\";\n}\n\n// SFC to automatically resize all textareas\nexport const ResizeTextareas = () => {\n    useEffect(() => {\n        document\n            .querySelectorAll(\".textarea\")\n            .forEach((e) => dynamicResizing(e));\n    });\n    // component doesn't render anything\n    return null;\n};\n\nexport function preventEnter(event) {\n    if (event.keyCode === 13) {\n        event.preventDefault();\n    }\n}\n\nexport function resetValid(element) {\n    element.classList.remove(\"is-invalid\");\n}\n\nexport function resetValidId(elementId) {\n    resetValid(document.getElementById(elementId));\n}\n\n// API functions\n\nexport function getAllQuestions(callback) {\n    fetch(\"/api/getAllQuestions\")\n        .then((res) => res.json())\n        .then((questions) => {\n            console.log(\"got all questions\");\n            callback(questions);\n        });\n}\n\nexport function getQuestion(questionId, callback) {\n    fetch(`/api/getQuestion/${questionId}`)\n        .then((res) => res.json())\n        .then((question) => {\n            console.log(\"got question:\", question);\n            callback(question);\n        });\n}\n\nexport function getAllAnswered(callback) {\n    fetch(\"/api/getAllAnswered\")\n        .then((res) => res.json())\n        .then((answered) => {\n            console.log(\"got all answered\");\n            callback(answered);\n        });\n}\n\nexport function getAnswered(trainee, questionId, callback) {\n    fetch(`/api/getAnswered/${trainee}/${questionId}`)\n        .then((res) => res.json())\n        .then((question) => {\n            console.log(`got question ${questionId} for trainee ${trainee}`);\n            callback(question);\n        });\n}\n"]},"metadata":{},"sourceType":"module"}