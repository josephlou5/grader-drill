{"ast":null,"code":"var _jsxFileName = \"/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/question.jsx\";\nimport React from \"react\";\nimport CodeField from \"./codeField\";\nimport QuestionTextField from \"./questionTextField\";\nimport AnswerField from \"./answerField\";\nimport { ResizeTextareas } from \"../shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  const {\n    question,\n    noChange\n  } = props;\n\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Undefined question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (question.id == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Invalid question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  let codeFieldProps = {\n    question\n  };\n  let answerFieldProps = {\n    question\n  };\n\n  if (noChange) {\n    codeFieldProps[\"noChange\"] = true;\n    answerFieldProps[\"noChange\"] = true;\n  } else {\n    const {\n      onAddHighlight,\n      onClearHighlights,\n      onDeleteHighlight,\n      onAnswerChange,\n      onMCSelect\n    } = props;\n    Object.assign(codeFieldProps, {\n      onAddHighlight,\n      onClearHighlights\n    });\n    Object.assign(answerFieldProps, {\n      onClearHighlights,\n      onDeleteHighlight,\n      onAnswerChange,\n      onMCSelect\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResizeTextareas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.questionType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionTextField, {\n      question: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), question.hasCodeField && /*#__PURE__*/_jsxDEV(CodeField, { ...codeFieldProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }, this), question.hasAnswerField && /*#__PURE__*/_jsxDEV(AnswerField, { ...answerFieldProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/question.jsx"],"names":["React","CodeField","QuestionTextField","AnswerField","ResizeTextareas","Question","props","question","noChange","id","codeFieldProps","answerFieldProps","onAddHighlight","onClearHighlights","onDeleteHighlight","onAnswerChange","onMCSelect","Object","assign","questionType","hasCodeField","hasAnswerField"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B;;AACA,MAAI,CAACC,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIA,QAAQ,CAACE,EAAT,IAAe,IAAnB,EAAyB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,cAAc,GAAG;AAAEH,IAAAA;AAAF,GAArB;AACA,MAAII,gBAAgB,GAAG;AAAEJ,IAAAA;AAAF,GAAvB;;AACA,MAAIC,QAAJ,EAAc;AACVE,IAAAA,cAAc,CAAC,UAAD,CAAd,GAA6B,IAA7B;AACAC,IAAAA,gBAAgB,CAAC,UAAD,CAAhB,GAA+B,IAA/B;AACH,GAHD,MAGO;AACH,UAAM;AACFC,MAAAA,cADE;AAEFC,MAAAA,iBAFE;AAGFC,MAAAA,iBAHE;AAIFC,MAAAA,cAJE;AAKFC,MAAAA;AALE,QAMFV,KANJ;AAOAW,IAAAA,MAAM,CAACC,MAAP,CAAcR,cAAd,EAA8B;AAC1BE,MAAAA,cAD0B;AAE1BC,MAAAA;AAF0B,KAA9B;AAIAI,IAAAA,MAAM,CAACC,MAAP,CAAcP,gBAAd,EAAgC;AAC5BE,MAAAA,iBAD4B;AAE5BC,MAAAA,iBAF4B;AAG5BC,MAAAA,cAH4B;AAI5BC,MAAAA;AAJ4B,KAAhC;AAMH;;AAED,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKT,QAAQ,CAACY;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKA,QAAQ,CAACa,YAAT,iBAAyB,QAAC,SAAD,OAAeV;AAAf;AAAA;AAAA;AAAA;AAAA,YAL9B,EAMKH,QAAQ,CAACc,cAAT,iBAA2B,QAAC,WAAD,OAAiBV;AAAjB;AAAA;AAAA;AAAA;AAAA,YANhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KA5CuBN,Q","sourcesContent":["import React from \"react\";\nimport CodeField from \"./codeField\";\nimport QuestionTextField from \"./questionTextField\";\nimport AnswerField from \"./answerField\";\nimport { ResizeTextareas } from \"../shared\";\n\nexport default function Question(props) {\n    const { question, noChange } = props;\n    if (!question) {\n        return <h1>Undefined question</h1>;\n    }\n    if (question.id == null) {\n        return <h1>Invalid question</h1>;\n    }\n\n    let codeFieldProps = { question };\n    let answerFieldProps = { question };\n    if (noChange) {\n        codeFieldProps[\"noChange\"] = true;\n        answerFieldProps[\"noChange\"] = true;\n    } else {\n        const {\n            onAddHighlight,\n            onClearHighlights,\n            onDeleteHighlight,\n            onAnswerChange,\n            onMCSelect,\n        } = props;\n        Object.assign(codeFieldProps, {\n            onAddHighlight,\n            onClearHighlights,\n        });\n        Object.assign(answerFieldProps, {\n            onClearHighlights,\n            onDeleteHighlight,\n            onAnswerChange,\n            onMCSelect,\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <ResizeTextareas />\n            <h1>Question</h1>\n            <h3>{question.questionType}</h3>\n            <QuestionTextField question={question} />\n            {question.hasCodeField && <CodeField {...codeFieldProps} />}\n            {question.hasAnswerField && <AnswerField {...answerFieldProps} />}\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}