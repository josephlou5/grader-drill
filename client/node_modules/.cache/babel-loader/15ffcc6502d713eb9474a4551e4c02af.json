{"ast":null,"code":"var _jsxFileName = \"/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/questionTextField.jsx\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { resetValid } from \"../shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionTextField(props) {\n  const {\n    questionText\n  } = props.question;\n\n  let field = /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    children: questionText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 17\n  }, this);\n\n  if (props.editMode) {\n    field = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control textarea\",\n          id: \"question-edit-text\",\n          onChange: event => {\n            resetValid(event.target);\n            props.onTextChange(event.target.value);\n          },\n          value: questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: \"Must have question text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 text-break\",\n        children: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-text\",\n    children: field\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n_c = QuestionTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionTextField\");","map":{"version":3,"sources":["/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/components/questionTextField.jsx"],"names":["React","ReactMarkdown","resetValid","QuestionTextField","props","questionText","question","field","editMode","event","target","onTextChange","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAK,CAACE,QAA/B;;AAEA,MAAIC,KAAK,gBAAG,QAAC,aAAD;AAAA,cAAgBF;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAZ;;AACA,MAAID,KAAK,CAACI,QAAV,EAAoB;AAChBD,IAAAA,KAAK,gBACD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,uBADd;AAEI,UAAA,EAAE,EAAC,oBAFP;AAGI,UAAA,QAAQ,EAAGE,KAAD,IAAW;AACjBP,YAAAA,UAAU,CAACO,KAAK,CAACC,MAAP,CAAV;AACAN,YAAAA,KAAK,CAACO,YAAN,CAAmBF,KAAK,CAACC,MAAN,CAAaE,KAAhC;AACH,WANL;AAOI,UAAA,KAAK,EAAEP;AAPX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCE;AAAnC;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;KA3BuBJ,iB","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { resetValid } from \"../shared\";\n\nexport default function QuestionTextField(props) {\n    const { questionText } = props.question;\n\n    let field = <ReactMarkdown>{questionText}</ReactMarkdown>;\n    if (props.editMode) {\n        field = (\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <textarea\n                        className=\"form-control textarea\"\n                        id=\"question-edit-text\"\n                        onChange={(event) => {\n                            resetValid(event.target);\n                            props.onTextChange(event.target.value);\n                        }}\n                        value={questionText}\n                    />\n                    <div className=\"invalid-feedback\">\n                        Must have question text.\n                    </div>\n                </div>\n                <div className=\"col-6 text-break\">{field}</div>\n            </div>\n        );\n    }\n\n    return <div className=\"question-text\">{field}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}