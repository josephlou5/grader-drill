{"ast":null,"code":"// API functions\nfunction getRequest(route) {\n  return fetch(route).then(res => res.json());\n}\n\nfunction postRequest(route, data) {\n  return fetch(route, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n}\n\nexport function getAllQuestions(callback) {\n  getRequest(\"/api/getAllQuestions\").then(questions => {\n    console.log(\"got all questions\");\n    callback(questions);\n  });\n}\nexport function getQuestion(questionId, callback) {\n  getRequest(`/api/getQuestion/${questionId}`).then(question => {\n    console.log(\"got question:\", question);\n    callback(question);\n  });\n}\nexport function getAllAnswered(callback) {\n  getRequest(\"/api/getAllAnswered\").then(answered => {\n    console.log(\"got all answered\");\n    callback(answered);\n  });\n}\nexport function getAnswered(trainee, questionId, callback) {\n  getRequest(`/api/getAnswered/${trainee}/${questionId}`).then(question => {\n    console.log(`got question ${questionId} for trainee ${trainee}`);\n    callback(question);\n  });\n}\nexport function updateAnswered(question) {\n  postRequest(\"/api/updateAnswered\", question).then(() => console.log(`Updated answered for question ${question.id} and trainee ${question.trainee}`));\n}","map":{"version":3,"sources":["/Users/josephlou/Documents/Files/Princeton/grading/grader-drill-app/client/src/App/api.js"],"names":["getRequest","route","fetch","then","res","json","postRequest","data","method","headers","body","JSON","stringify","getAllQuestions","callback","questions","console","log","getQuestion","questionId","question","getAllAnswered","answered","getAnswered","trainee","updateAnswered","id"],"mappings":"AAAA;AAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAOC,KAAK,CAACD,KAAD,CAAL,CAAaE,IAAb,CAAmBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAA3B,CAAP;AACH;;AAED,SAASC,WAAT,CAAqBL,KAArB,EAA4BM,IAA5B,EAAkC;AAC9B,SAAOL,KAAK,CAACD,KAAD,EAAQ;AAChBO,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFO;AAGhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHU,GAAR,CAAZ;AAKH;;AAED,OAAO,SAASM,eAAT,CAAyBC,QAAzB,EAAmC;AACtCd,EAAAA,UAAU,CAAC,sBAAD,CAAV,CAAmCG,IAAnC,CAAyCY,SAAD,IAAe;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAH,IAAAA,QAAQ,CAACC,SAAD,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASG,WAAT,CAAqBC,UAArB,EAAiCL,QAAjC,EAA2C;AAC9Cd,EAAAA,UAAU,CAAE,oBAAmBmB,UAAW,EAAhC,CAAV,CAA6ChB,IAA7C,CAAmDiB,QAAD,IAAc;AAC5DJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAA7B;AACAN,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBP,QAAxB,EAAkC;AACrCd,EAAAA,UAAU,CAAC,qBAAD,CAAV,CAAkCG,IAAlC,CAAwCmB,QAAD,IAAc;AACjDN,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BL,UAA9B,EAA0CL,QAA1C,EAAoD;AACvDd,EAAAA,UAAU,CAAE,oBAAmBwB,OAAQ,IAAGL,UAAW,EAA3C,CAAV,CAAwDhB,IAAxD,CAA8DiB,QAAD,IAAc;AACvEJ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeE,UAAW,gBAAeK,OAAQ,EAA9D;AACAV,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAHD;AAIH;AAED,OAAO,SAASK,cAAT,CAAwBL,QAAxB,EAAkC;AACrCd,EAAAA,WAAW,CAAC,qBAAD,EAAwBc,QAAxB,CAAX,CAA6CjB,IAA7C,CAAkD,MAC9Ca,OAAO,CAACC,GAAR,CACK,iCAAgCG,QAAQ,CAACM,EAAG,gBAAeN,QAAQ,CAACI,OAAQ,EADjF,CADJ;AAKH","sourcesContent":["// API functions\n\nfunction getRequest(route) {\n    return fetch(route).then((res) => res.json());\n}\n\nfunction postRequest(route, data) {\n    return fetch(route, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n    });\n}\n\nexport function getAllQuestions(callback) {\n    getRequest(\"/api/getAllQuestions\").then((questions) => {\n        console.log(\"got all questions\");\n        callback(questions);\n    });\n}\n\nexport function getQuestion(questionId, callback) {\n    getRequest(`/api/getQuestion/${questionId}`).then((question) => {\n        console.log(\"got question:\", question);\n        callback(question);\n    });\n}\n\nexport function getAllAnswered(callback) {\n    getRequest(\"/api/getAllAnswered\").then((answered) => {\n        console.log(\"got all answered\");\n        callback(answered);\n    });\n}\n\nexport function getAnswered(trainee, questionId, callback) {\n    getRequest(`/api/getAnswered/${trainee}/${questionId}`).then((question) => {\n        console.log(`got question ${questionId} for trainee ${trainee}`);\n        callback(question);\n    });\n}\n\nexport function updateAnswered(question) {\n    postRequest(\"/api/updateAnswered\", question).then(() =>\n        console.log(\n            `Updated answered for question ${question.id} and trainee ${question.trainee}`\n        )\n    );\n}\n"]},"metadata":{},"sourceType":"module"}